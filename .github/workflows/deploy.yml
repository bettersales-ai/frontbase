name: Server Deployment
on:
  push:
    branches:
      - main

env:
  db_app: bettersalesai-database
  image: registry.fly.io/bettersalesai-kickads

concurrency:
  group: deploy

jobs:
  build:
    name: Build docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host
            image=moby/buildkit:master

      - run: flyctl auth docker
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.image }}:${{ github.sha }}
          secrets: |
            "deploy=${{ secrets.DEPLOY_SECRETS }}"


  deploy:
    name: Deploy app
    needs: build
    runs-on: ubuntu-latest
    concurrency: deploy-group    # optional: ensure only one action runs at a time
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to fly.io
        run: flyctl deploy --image=${{ env.image }}:${{ github.sha }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  run_migrations:
    needs: build
    name: Run migrations
    runs-on: ubuntu-latest
    concurrency: migration-group    # optional: ensure only one action runs at a time
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "yarn"

      - name: Setup secrets
        run: echo "$DEPLOY_SECRETS" > .env
        env:
          DEPLOY_SECRETS: ${{ secrets.DEPLOY_SECRETS }}

      - name: Install dependencies
        run : yarn install --production=false

      - run: yarn db:migrate
